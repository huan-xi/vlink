syntax = "proto3";

package abi;


//客户端->服务端
message ToServer {
    uint64 id = 1;
    oneof to_server_data {
        ReqHandshake handshake = 2;
        ReqConfig req_config = 3;
        PeerEnter peer_enter = 10;
        PeerLeave peer_leave = 11;
        PeerChange peer_change = 12;
        PeerMessage peer_message = 13;
        // 上报信息
        PeerReport peer_report = 14;
        // 更新端点
        ExtraEndpoint update_extra_endpoint = 15;

        DevHandshakeComplete dev_handshake_complete = 20;
    }
}

message DevHandshakeComplete {
    string target_pub_key = 1;
    string proto = 2;
}
message ExtraEndpoint {
    string proto = 1;
    string endpoint = 2;
}

message ReqHandshake {
    uint32 version = 1;
    //访问token,用于身份校验
    string pub_key = 2;
    optional string token = 3;
    string sign = 4;

}
message ReqConfig {

}
message PeerEnter {
    string ip = 1;
    /// udp 直连端口
    optional string endpoint_addr = 2;
    /// udp 端口
    uint32 port = 3;
    repeated ExtraEndpoint extra_endpoints = 4;
}
message PeerLeave {}
message PeerMessage {}
message PeerChange {}
message PeerReport {}